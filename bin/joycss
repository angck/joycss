#!/usr/bin/env node

var argv = process.argv.slice(1);
var path = require('path');
var fs = require('fs');

if (argv.length === 1){
  //如果没有输入任何信息
  argv.push('-h');
}
var config = {
  file: '',
  //布局方式
  layout: 'auto'
};

var args = argv.filter(function(arg){
  var match = arg.match(/^--?([a-z][0-9a-z-]*)(?:=([^\s]+))?$/i);
  if (match) { 
    arg = match[1];
  } else { 
    return arg;
  }

  switch (arg) {
    case 'h':
    case 'help': {
      var help = fs.readFileSync(__dirname + '/help.txt');
      var version = fs.readFileSync(path.resolve(__dirname, '../package.json'));
      version = JSON.parse(version).version;
      console.log(help.toString().replace('{version}', version).
        replace('{filename}', __filename));
      process.exit(0);
    }

    case 'y':
    case 'vertical': {
      config.layout = 'vertical';
      break;
    }

    case 'x':
    case 'horizontal': {
      config.layout = 'horizontal';
      break;
    }

    //全部使用紧凑拼图
    case 'c':
    case 'close': {
      config.layout = 'close';
      break;
    }

    //使用png24
    case 'a':
    case 'alpha': {
      config.force8bit = false;
      break;
    }

    //背景白色
    case 'w':
    case 'white': {
      config.background = 'ffffff00';
      break;
    }

    //重写文件名,使用source文件
    case 's':
    case 'source': {
      config.writeFile = true;
      break;
    }

    //图片上传
    case 'u':
    case 'upload': {
      config.uploadFile = true;
      break;
    }

    //重写文件名,使用source文件
    case 'i':
    case 'important': {
      config.useImportant = true;
      break;
    }

    case 'v':
    case 'version': {
      var version = fs.readFileSync(path.resolve(__dirname, '../package.json'));
      version = JSON.parse(version).version;
      console.log("v" + version);
      process.exit(0);
    }

  }
});


config.file = args[1];

var exists = fs.existsSync || path.existsSync;
if (!exists(config.file)){
  console.log('no css file input or you file is not exists!');
} else {
  config.file = path.resolve(process.cwd(), config.file);
  var parser = require('../src/spriteDef');

  debugger;
  new parser(config);
}

/**
 * vim: ft=javascript:tw=80:
 */
